// <auto-generated />
using System;
using AbrasNigeria.Data.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AbrasNigeria.Migrations.PartsBookDb
{
    [DbContext(typeof(PartsBookDbContext))]
    [Migration("20191025130319_RemovedOtherModels-1")]
    partial class RemovedOtherModels1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AbrasNigeria.Models.Brand", b =>
                {
                    b.Property<long>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("BrandId");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("AbrasNigeria.Models.Description", b =>
                {
                    b.Property<long>("DescriptionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescriptionName");

                    b.Property<string>("ImageUrl");

                    b.Property<string>("ThumbUrl");

                    b.HasKey("DescriptionId");

                    b.ToTable("Descriptions");
                });

            modelBuilder.Entity("AbrasNigeria.Models.Machine", b =>
                {
                    b.Property<long>("MachineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BrandId");

                    b.Property<string>("Description");

                    b.Property<string>("ImageUrl");

                    b.Property<string>("ModelName");

                    b.Property<string>("SerialNumber");

                    b.Property<string>("ThumbUrl");

                    b.HasKey("MachineId");

                    b.HasIndex("BrandId");

                    b.ToTable("Machines");
                });

            modelBuilder.Entity("AbrasNigeria.Models.MachineSection", b =>
                {
                    b.Property<long>("MachineSectionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("MachineId");

                    b.Property<long>("SectionId");

                    b.HasKey("MachineSectionId");

                    b.HasIndex("MachineId");

                    b.HasIndex("SectionId");

                    b.ToTable("MachineSection");
                });

            modelBuilder.Entity("AbrasNigeria.Models.MachineSectionGroup", b =>
                {
                    b.Property<long>("MachineSectionGroupId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("MachineId");

                    b.Property<long>("SectionGroupId");

                    b.Property<long?>("SectionId");

                    b.HasKey("MachineSectionGroupId");

                    b.HasIndex("MachineId");

                    b.HasIndex("SectionGroupId");

                    b.HasIndex("SectionId");

                    b.ToTable("MachineSectionGroup");
                });

            modelBuilder.Entity("AbrasNigeria.Models.MachineSectionGroupProduct", b =>
                {
                    b.Property<long>("MachineSectionGroupProductId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("MachineId");

                    b.Property<long>("ProductId");

                    b.Property<long>("SectionGroupId");

                    b.HasKey("MachineSectionGroupProductId");

                    b.HasIndex("MachineId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SectionGroupId");

                    b.ToTable("MachineSectionGroupProduct");
                });

            modelBuilder.Entity("AbrasNigeria.Models.Product", b =>
                {
                    b.Property<long>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BrandId");

                    b.Property<string>("PartNumber");

                    b.Property<long>("SectionId");

                    b.HasKey("ProductId");

                    b.HasIndex("BrandId");

                    b.HasIndex("SectionId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("AbrasNigeria.Models.ProductDescription", b =>
                {
                    b.Property<long>("ProductDescriptionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("DescriptionId");

                    b.Property<long>("ProductId");

                    b.HasKey("ProductDescriptionId");

                    b.HasIndex("DescriptionId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductDescription");
                });

            modelBuilder.Entity("AbrasNigeria.Models.ProductSectionGroup", b =>
                {
                    b.Property<long>("ProductSectionGroupId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ProductId");

                    b.Property<long>("SectionGroupId");

                    b.HasKey("ProductSectionGroupId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SectionGroupId");

                    b.ToTable("ProductSectionGroup");
                });

            modelBuilder.Entity("AbrasNigeria.Models.Section", b =>
                {
                    b.Property<long>("SectionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("ImageUrl");

                    b.Property<string>("SectionName");

                    b.Property<string>("ThumbUrl");

                    b.HasKey("SectionId");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("AbrasNigeria.Models.SectionGroup", b =>
                {
                    b.Property<long>("SectionGroupId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("ImageUrl");

                    b.Property<string>("SectionGroupName");

                    b.Property<long?>("SectionId");

                    b.Property<string>("ThumbUrl");

                    b.HasKey("SectionGroupId");

                    b.HasIndex("SectionId");

                    b.ToTable("SectionGroups");
                });

            modelBuilder.Entity("AbrasNigeria.Models.Machine", b =>
                {
                    b.HasOne("AbrasNigeria.Models.Brand", "Brand")
                        .WithMany("Machines")
                        .HasForeignKey("BrandId");
                });

            modelBuilder.Entity("AbrasNigeria.Models.MachineSection", b =>
                {
                    b.HasOne("AbrasNigeria.Models.Machine", "Machine")
                        .WithMany("Sections")
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AbrasNigeria.Models.Section", "Section")
                        .WithMany("Sections")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AbrasNigeria.Models.MachineSectionGroup", b =>
                {
                    b.HasOne("AbrasNigeria.Models.Machine", "Machine")
                        .WithMany("SectionGroups")
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AbrasNigeria.Models.SectionGroup", "SectionGroup")
                        .WithMany("Machines")
                        .HasForeignKey("SectionGroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AbrasNigeria.Models.Section")
                        .WithMany("Machines")
                        .HasForeignKey("SectionId");
                });

            modelBuilder.Entity("AbrasNigeria.Models.MachineSectionGroupProduct", b =>
                {
                    b.HasOne("AbrasNigeria.Models.Machine", "Machine")
                        .WithMany("SectionGroupProducts")
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AbrasNigeria.Models.Product", "Product")
                        .WithMany("MachineSectionGroups")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AbrasNigeria.Models.SectionGroup", "SectionGroup")
                        .WithMany()
                        .HasForeignKey("SectionGroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AbrasNigeria.Models.Product", b =>
                {
                    b.HasOne("AbrasNigeria.Models.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AbrasNigeria.Models.Section", "Section")
                        .WithMany()
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AbrasNigeria.Models.ProductDescription", b =>
                {
                    b.HasOne("AbrasNigeria.Models.Description", "Description")
                        .WithMany("Products")
                        .HasForeignKey("DescriptionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AbrasNigeria.Models.Product", "Product")
                        .WithMany("Descriptions")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AbrasNigeria.Models.ProductSectionGroup", b =>
                {
                    b.HasOne("AbrasNigeria.Models.Product", "Product")
                        .WithMany("SectionGroups")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AbrasNigeria.Models.SectionGroup", "SectionGroup")
                        .WithMany("Products")
                        .HasForeignKey("SectionGroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AbrasNigeria.Models.SectionGroup", b =>
                {
                    b.HasOne("AbrasNigeria.Models.Section", "Section")
                        .WithMany("SectionGroups")
                        .HasForeignKey("SectionId");
                });
#pragma warning restore 612, 618
        }
    }
}
